package com.raniejaderamiso;

import javax.lang.model.element.Modifier;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.EnumSet;
import java.util.List;

import com.squareup.javawriter.JavaWriter;
import org.gradle.api.DefaultTask;
import org.gradle.api.tasks.Input;
import org.gradle.api.tasks.TaskAction;
import org.gradle.tooling.BuildException;

/**
 * @author Ranie Jade Ramiso
 */
public class BuildConfigTask extends DefaultTask {
    private String packageName;

    private String outputDirectory;

    private List<String> imports = new ArrayList<>();

    private List<List<String>> lines = new ArrayList<>();

    @Input
    public String getPackageName() {
        return packageName;
    }

    public void setPackageName(String packageName) {
        this.packageName = packageName;
    }

    public String getOutputDirectory() {
        return outputDirectory;
    }

    public void setOutputDirectory(String outputDirectory) {
        this.outputDirectory = outputDirectory;
    }

    public void importPackage(String packageName) {
        imports.add(packageName);
    }

    public void config(String type, String name, String value) {
        lines.add(Arrays.asList(type, name, value));
    }

    void setLines(List<List<String>> lines) {
        this.lines = lines;
    }

    void setImports(List<String> imports) {
        this.imports = imports;
    }

    @TaskAction
    public void generateBuildConfig() {
        try {
            final File classFile = getProject().file(getFile());

            classFile.getParentFile().mkdirs();

            final FileWriter os = new FileWriter(classFile);

            final JavaWriter writer = new JavaWriter(os);

            writer.emitSingleLineComment("generated by: BuilderConfig");
            writer.emitSingleLineComment("do not edit");

            writer.emitPackage(packageName);

            writer.emitImports(imports);

            writer.beginType("BuilderConfig", "class", EnumSet.of(Modifier.PUBLIC, Modifier.FINAL));

            for (List<String> line : lines) {
                writer.emitField(line.get(0), line.get(1), EnumSet.of(Modifier.PUBLIC, Modifier.STATIC), line.get(2));
                writer.emitEmptyLine();
            }

            writer.beginConstructor(EnumSet.of(Modifier.PRIVATE));

            writer.endConstructor();

            writer.endType();

            writer.close();

        } catch (IOException e) {
            throw new BuildException(e.getMessage(), e);
        }
    }

    private String  getFile() {
        return Paths.get(getOutputDirectory(), getPackageName().replace(".", "/"), "BuilderConfig.java").toString();
    }
}
